// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserType {
  PARTICULIER
  ENTREPRISE
}
enum Country {
  Kuwait
  KSA
  UAE
  Qatar
  Bahrain
  Oman
}
enum Prefix {
  PLUS_965 @map("+965")
  PLUS_966 @map("+966")
  PLUS_971 @map("+971")
  PLUS_974 @map("+974")
  PLUS_973 @map("+973")
  PLUS_968 @map("+968")
}

enum DeletionStatus {
  PENDING
  APPROVED
  REJECTED
}

enum Role {
  USER
  ADMIN
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  newEmail  String? @unique
  password  String
  type     UserType?
  firstName String
  lastName  String
  country Country
  prefix    Prefix
  phoneNumber Int
  address   String
  verify_token String?
  verified_email Boolean @default(false)
  reset_token      String?
  reset_token_expiry DateTime?
  role      Role @default(USER)
  refresh_token String? @unique
  profilePicture String?
  idCardFront String?
  idCardBack String?
  isActive Boolean @default(true)
  isVerified Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  account_deletion_requests         account_deletion_requests[]
  reviewed_deletion_requests        account_deletion_requests[] @relation("AdminReview")
}

model account_deletion_requests{
  id        String   @id @default(cuid())
  user_id  String @unique
  status DeletionStatus @default(PENDING)
  requested_at DateTime @default(now())
  reviewed_by_admin_id String? 
  reviewed_at DateTime?

  user User @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  reviewed_by_admin User? @relation("AdminReview", fields: [reviewed_by_admin_id], references: [id], onDelete: SetNull, onUpdate: Cascade)  
  
}

